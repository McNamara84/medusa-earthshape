namespace :timemachine do

  task :environment do
    set :timemachine_path, deploy_path.join("timemachine")
    set :timemachine_dest, Date.parse(ENV["dest"]) if ENV["dest"]
    set :unicorn_root, fetch(:timemachine_path)
    set :relative_url_root, "/timemachine"
    set :rails_env, "timemachine"
  end

  def reset_timemachine_dir(date)
    path = fetch(:timemachine_path)
    backup_name = date.strftime("%Y%m%d")
    backup_path = Pathname.new("/tmp/medusa/backup/files").join(backup_name)
    if test "[ -d #{backup_path} ]"
      execute :rm, path if test "[ -e #{path} ]"
      execute :ln, "-s", backup_path, path
    else
      warn "Backup directory (#{backup_path}) is not exist."
    end
  end

  def reset_timemachine_db(date)
    within fetch(:timemachine_path) do
      with rails_env: fetch(:rails_env), dump_date: date.strftime("%Y%m%d") do
        rake "db:drop"
        rake "db:create"
        rake "db:restore"
      end
    end
  end

  desc 'Return to yesterday condition.'
  task setup: :environment do
    on roles(:app) do
      reset_timemachine_dir(fetch(:timemachine_dest))
      reset_timemachine_db(fetch(:timemachine_dest))
    end
  end

  task start: :environment do
    invoke "timemachine:setup"
    invoke "unicorn:start"
  end

  task stop: :environment do
    invoke "unicorn:stop"
  end

  task restart: :environment do
    invoke "timemachine:stop"
    invoke "timemachine:start"
  end

end

namespace :load do
  task :defaults do
    set :timemachine_dest, Date.today - 1
  end
end
